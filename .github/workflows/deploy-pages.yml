name: Build & Deploy (daily + on push)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "20 14 * * *"   # daily

permissions:
  contents: read
  deployments: write   # keep if you want the GitHub "Deployment" badge

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f generator/requirements.txt ]; then pip install -r generator/requirements.txt || true; fi
          pip install beautifulsoup4 lxml rapidfuzz pillow

      - name: Build site
        run: |
          if [ -f generator/generate.py ]; then python generator/generate.py; fi
          if [ -f dist/discover/index.html ]; then
            python generator/canonicalize.py --in dist/discover/index.html --out dist/discover/index.html || true
            python generator/make_og_images.py --discover dist/discover/index.html --out dist/og || true
          fi
          python generator/generate_sitemap.py --root dist --base https://tinytoolshub.pages.dev || true

      - name: Deploy to Cloudflare Pages (PRODUCTION)
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: dist
          branch: main                    # <<-- this maps to "production"
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}   # optional; remove if you don't want the badge
          
      - name: Ensure jq is available
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Wait for Cloudflare deployment to finish (10-min timeout)
        env:
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_PROJECT: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          CF_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TIMEOUT: "600"
          SLEEP: "10"
        run: |
          set -euo pipefail
          start=$(date +%s)
          echo "Polling Pages deployments for project '$CF_PROJECT'..."
          while :; do
            resp=$(curl -sS -H "Authorization: Bearer $CF_TOKEN" \
              "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/pages/projects/$CF_PROJECT/deployments?per_page=1")
            ok=$(echo "$resp" | jq -r '.success')
            if [ "$ok" != "true" ]; then
              echo "Cloudflare API error:"; echo "$resp"; exit 1
            fi
            status=$(echo "$resp" | jq -r '.result[0].latest_stage.status')
            url=$(echo "$resp" | jq -r '.result[0].url')
            env=$(echo "$resp" | jq -r '.result[0].environment')
            echo "Current status: $status | env: $env | url: $url"

            case "$status" in
              success) echo "✅ Deployment is live: $url"; break ;;
              failure|canceled) echo "❌ Deployment $status"; echo "$resp"; exit 1 ;;
            esac

            now=$(date +%s)
            if [ $((now - start)) -ge "$TIMEOUT" ]; then
              echo "⏱️ Timeout after $TIMEOUT seconds waiting for deployment."; exit 1
            fi
            sleep "$SLEEP"
          done

